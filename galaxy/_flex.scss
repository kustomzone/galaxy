/*___ GALAXY GRID (non-flex) */

//___ MIXINS
@mixin grid_columns {
  @for $i from 1 through 12 {
	$size: ($i/12) * 99%;
	[g~="#{$i}"] {
		-webkit-flex-basis: $size;
		-ms-flex-preferred-size: $size;
		flex-basis: $size;
		max-width: $size;
	}
  }
}

@mixin xsm_grid_columns {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xsm-breakpoint) {
	  [g~="xsm-#{$i}"] {
		width: $size;
		float: left;
	  }
	}
  }
}

@mixin sm_grid_columns {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $sm-breakpoint) {
	  [g~="sm-#{$i}"] {
		width: $size;
		float: left;
	  }
	}
  }
}

@mixin md_grid_columns {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $md-breakpoint) {
	  [g~="md-#{$i}"] {
		width: $size;
		float: left;
	  }
	}
  }
}

@mixin lg_grid_columns {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $lg-breakpoint) {
	  [g~="lg-#{$i}"] {
		width: $size;
		float: left;
	  }
	}
  }
}

@mixin xlg_grid_columns {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xlg-breakpoint) {
	  [g~="xlg-#{$i}"] {
		width: $size;
		float: left;
	  }
	}
  }
}

@mixin grid_offset {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	[g*="offset-#{$i}"] {
	  margin-left: $size;
	}
  }
}

@mixin xsm_grid_offset {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xsm-breakpoint) {
	  [g*="xsm-offset-#{$i}"] {
		margin-left: $size;
	  }
	}
  }
}

@mixin sm_grid_offset {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $sm-breakpoint) {
	  [g*="sm-offset-#{$i}"] {
		margin-left: $size;
	  }
	}
  }
}

@mixin md_grid_offset {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $md-breakpoint) {
	  [g*="md-offset-#{$i}"] {
		margin-left: $size;
	  }
	}
  }
}

@mixin lg_grid_offset {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $lg-breakpoint) {
	  [g*="lg-offset-#{$i}"] {
		margin-left: $size;
	  }
	}
  }
}

@mixin xlg_grid_offset {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xlg-breakpoint) {
	  [g*="xlg-offset-#{$i}"] {
		margin-left: $size;
	  }
	}
  }
}

@mixin grid_push_left {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;

	[g~="left-#{$i}"] {
	  position: relative;
	  left: -$size;
	}
  }
}

@mixin xsm_grid_push_left {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xsm-breakpoint) {
	  [g~="xsm-left-#{$i}"] {
		position: relative;
		left: -$size;
	  }
	}
  }
}

@mixin sm_grid_push_left {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $sm-breakpoint) {
	  [g~="sm-left-#{$i}"] {
		position: relative;
		left: -$size;
	  }
	}
  }
}

@mixin md_grid_push_left {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $md-breakpoint) {
	  [g~="md-left-#{$i}"] {
		position: relative;
		left: -$size;
	  }
	}
  }
}

@mixin lg_grid_push_left {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $lg-breakpoint) {
	  [g~="lg-left-#{$i}"] {
		position: relative;
		left: -$size;
	  }
	}
  }
}

@mixin xlg_grid_push_left {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xlg-breakpoint) {
	  [g~="xlg-left-#{$i}"] {
		position: relative;
		left: -$size;
	  }
	}
  }
}

@mixin grid_push_right {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;

	[g~="right-#{$i}"] {
	  position: relative;
	  left: $size;
	}
  }
}

@mixin xsm_grid_push_right {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xsm-breakpoint) {
	  [g~="xsm-right-#{$i}"] {
		position: relative;
		left: $size;
	  }
	}
  }
}

@mixin sm_grid_push_right {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $sm-breakpoint) {
	  [g~="sm-right-#{$i}"] {
		position: relative;
		left: $size;
	  }
	}
  }
}

@mixin md_grid_push_right {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $md-breakpoint) {
	  [g~="md-right-#{$i}"] {
		position: relative;
		left: $size;
	  }
	}
  }
}

@mixin lg_grid_push_right {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $lg-breakpoint) {
	  [g~="lg-right-#{$i}"] {
		position: relative;
		left: $size;
	  }
	}
  }
}

@mixin xlg_grid_push_right {
  @for $i from 1 through 12 {
	$size: ($i/12) * 100%;
	@media screen and (min-width: $xlg-breakpoint) {
	  [g~="xlg-right-#{$i}"] {
		position: relative;
		left: $size;
	  }
	}
  }
}

[g~="1"], [g~="2"], [g~="3"], [g~="4"], [g~="5"], [g~="6"], [g~="7"], [g~="8"], [g~="9"], [g~="10"], [g~="11"], [g~="12"] {
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-flex: 0;
	-webkit-flex-grow: 0;
	-ms-flex-positive: 0;
	flex-grow: 0;
	-webkit-flex-shrink: 0;
	-ms-flex-negative: 0;
	flex-shrink: 0;

}
section, p, h1, h2, h3, h4, h5, h6 {
	width: 100%;
	display: flex;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	-webkit-box-orient: horizontal;
	-webkit-box-direction: normal;
	-webkit-flex-direction: row;
	-ms-flex-direction: row;
	flex-direction: row;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
	& [g~="reverse"] {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: reverse;
		-webkit-flex-direction: row-reverse;
		-ms-flex-direction: row-reverse;
		flex-direction: row-reverse;
		-webkit-flex-wrap: row-reverse;
		-ms-flex-wrap: row-reverse;
		flex-wrap: row-reverse;
	}
}

[g][g~="reverse"] {
	-webkit-box-orient: vertical;
	-webkit-box-direction: reverse;
	-webkit-flex-direction: column-reverse;
	-ms-flex-direction: column-reverse;
	flex-direction: column-reverse;
	-webkit-flex-wrap: column-reverse;
	-ms-flex-wrap: column-reverse;
	flex-wrap: column-reverse;
}

// -- COLUMNS
@include grid_columns;
@include xsm_grid_columns;
@include sm_grid_columns;
@include md_grid_columns;
@include lg_grid_columns;
@include xlg_grid_columns;

// -- OFFSETS
@include grid_offset;
@include xsm_grid_offset;
@include sm_grid_offset;
@include md_grid_offset;
@include lg_grid_offset;
@include xlg_grid_offset;

// -- PUSH LEFT
@include grid_push_left;
@include xsm_grid_push_left;
@include sm_grid_push_left;
@include md_grid_push_left;
@include lg_grid_push_left;
@include xlg_grid_push_left;

// -- PUSH RIGHT
@include grid_push_right;
@include xsm_grid_push_right;
@include sm_grid_push_right;
@include md_grid_push_right;
@include lg_grid_push_right;
@include xlg_grid_push_right;

// -- CONTAINERS
[g~="xlg-container"] {
  max-width: $xlg-breakpoint;
  margin-left: $lg-margin;
  margin-right: $lg-margin;
}

[g~='lg-container'] {
  max-width: $lg-breakpoint;
  margin-left: $md-margin;
  margin-right: $md-margin;
}

[g~='md-container'] {
  max-width: $md-breakpoint;
  margin-left: $sm-margin;
  margin-right: $sm-margin;
}

[g~='sm-container'] {
  max-width: $sm-breakpoint;
}

[g~='xsm-container'] {
  max-width: $xsm-breakpoint;
}