/*___ GALAXY GRID (non-flex) */

//___ MIXINS
@mixin grid_columns {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    [g~="#{$i}"] {
      width: $size;
      float: left;
    }
  }
}

@mixin xsm_grid_columns {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xsm-breakpoint) {
      [g~="xsm-#{$i}"] {
        width: $size;
        float: left;
      }
    }
  }
}

@mixin sm_grid_columns {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $sm-breakpoint) {
      [g~="sm-#{$i}"] {
        width: $size;
        float: left;
      }
    }
  }
}

@mixin md_grid_columns {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $md-breakpoint) {
      [g~="md-#{$i}"] {
        width: $size;
        float: left;
      }
    }
  }
}

@mixin lg_grid_columns {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $lg-breakpoint) {
      [g~="lg-#{$i}"] {
        width: $size;
        float: left;
      }
    }
  }
}

@mixin xlg_grid_columns {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xlg-breakpoint) {
      [g~="xlg-#{$i}"] {
        width: $size;
        float: left;
      }
    }
  }
}

@mixin grid_offset {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    [g*="offset-#{$i}"] {
      margin-left: $size;
    }
  }
}

@mixin xsm_grid_offset {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xsm-breakpoint) {
      [g*="xsm-offset-#{$i}"] {
        margin-left: $size;
      }
    }
  }
}

@mixin sm_grid_offset {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $sm-breakpoint) {
      [g*="sm-offset-#{$i}"] {
        margin-left: $size;
      }
    }
  }
}

@mixin md_grid_offset {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $md-breakpoint) {
      [g*="md-offset-#{$i}"] {
        margin-left: $size;
      }
    }
  }
}

@mixin lg_grid_offset {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $lg-breakpoint) {
      [g*="lg-offset-#{$i}"] {
        margin-left: $size;
      }
    }
  }
}

@mixin xlg_grid_offset {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xlg-breakpoint) {
      [g*="xlg-offset-#{$i}"] {
        margin-left: $size;
      }
    }
  }
}

@mixin grid_push_left {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;

    [g~="left-#{$i}"] {
      position: relative;
      left: -$size;
    }
  }
}

@mixin xsm_grid_push_left {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xsm-breakpoint) {
      [g~="xsm-left-#{$i}"] {
        position: relative;
        left: -$size;
      }
    }
  }
}

@mixin sm_grid_push_left {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $sm-breakpoint) {
      [g~="sm-left-#{$i}"] {
        position: relative;
        left: -$size;
      }
    }
  }
}

@mixin md_grid_push_left {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $md-breakpoint) {
      [g~="md-left-#{$i}"] {
        position: relative;
        left: -$size;
      }
    }
  }
}

@mixin lg_grid_push_left {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $lg-breakpoint) {
      [g~="lg-left-#{$i}"] {
        position: relative;
        left: -$size;
      }
    }
  }
}

@mixin xlg_grid_push_left {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xlg-breakpoint) {
      [g~="xlg-left-#{$i}"] {
        position: relative;
        left: -$size;
      }
    }
  }
}

@mixin grid_push_right {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;

    [g~="right-#{$i}"] {
      position: relative;
      left: $size;
    }
  }
}

@mixin xsm_grid_push_right {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xsm-breakpoint) {
      [g~="xsm-right-#{$i}"] {
        position: relative;
        left: $size;
      }
    }
  }
}

@mixin sm_grid_push_right {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $sm-breakpoint) {
      [g~="sm-right-#{$i}"] {
        position: relative;
        left: $size;
      }
    }
  }
}

@mixin md_grid_push_right {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $md-breakpoint) {
      [g~="md-right-#{$i}"] {
        position: relative;
        left: $size;
      }
    }
  }
}

@mixin lg_grid_push_right {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $lg-breakpoint) {
      [g~="lg-right-#{$i}"] {
        position: relative;
        left: $size;
      }
    }
  }
}

@mixin xlg_grid_push_right {
  @for $i from 1 through 12 {
    $size: ($i/12) * 100%;
    @media screen and (min-width: $xlg-breakpoint) {
      [g~="xlg-right-#{$i}"] {
        position: relative;
        left: $size;
      }
    }
  }
}

//___ MIXINS

body {
  min-height: 100vh;
}

section {
  @include border-box;
  max-width: 100%;
  display: block;
}

[g] {
  @include border-box;
}

// -- COLUMNS
@include grid_columns;
@include xsm_grid_columns;
@include sm_grid_columns;
@include md_grid_columns;
@include lg_grid_columns;
@include xlg_grid_columns;

// -- OFFSETS
@include grid_offset;
@include xsm_grid_offset;
@include sm_grid_offset;
@include md_grid_offset;
@include lg_grid_offset;
@include xlg_grid_offset;

// -- PUSH LEFT
@include grid_push_left;
@include xsm_grid_push_left;
@include sm_grid_push_left;
@include md_grid_push_left;
@include lg_grid_push_left;
@include xlg_grid_push_left;

// -- PUSH RIGHT
@include grid_push_right;
@include xsm_grid_push_right;
@include sm_grid_push_right;
@include md_grid_push_right;
@include lg_grid_push_right;
@include xlg_grid_push_right;


// -- CONTAINERS
[g~="xlg-container"] {
  max-width: $xlg-breakpoint;
}

[g~='lg-container'] {
  max-width: $lg-breakpoint;
}

[g~='md-container'] {
  max-width: $md-breakpoint;
}

[g~='sm-container'] {
  max-width: $sm-breakpoint;
}

[g~='xsm-container'] {
  max-width: $xsm-breakpoint;
}